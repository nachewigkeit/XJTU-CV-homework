import matplotlib.pyplot as plt
import numpy as np
from PIL import Image, ImageEnhance, ImageFilter
from utils import match, gaus_noise
import cv2 as cv

image1 = Image.open(r"image/image1.jpg")
image1 = np.array(image1)
image2 = Image.open(r"image/image2.jpg")

plt.figure(figsize=(40, 15))
enh_bri = ImageEnhance.Brightness(image2)
enh_col = ImageEnhance.Color(image2)
enh_con = ImageEnhance.Contrast(image2)
plt.subplot(241)
plt.title("High Brightness", fontsize=36)
new_img = enh_bri.enhance(factor=1.5)
new_img = np.array(new_img)
match(image1, new_img)
plt.subplot(245)
plt.title("Low Brightness", fontsize=36)
new_img = enh_bri.enhance(factor=0.6)
new_img = np.array(new_img)
match(image1, new_img)
plt.subplot(242)
plt.title("High Saturation", fontsize=36)
new_img = enh_col.enhance(factor=1.5)
new_img = np.array(new_img)
match(image1, new_img)
plt.subplot(246)
plt.title("Low Saturation", fontsize=36)
new_img = enh_col.enhance(factor=0.6)
new_img = np.array(new_img)
match(image1, new_img)
plt.subplot(243)
plt.title("High Contrast", fontsize=36)
new_img = enh_con.enhance(factor=1.5)
new_img = np.array(new_img)
match(image1, new_img)
plt.subplot(247)
plt.title("Low Contrast", fontsize=36)
new_img = enh_con.enhance(factor=0.6)
new_img = np.array(new_img)
match(image1, new_img)
plt.subplot(244)
plt.title("Noise", fontsize=36)
new_img = np.array(image2)
new_img = gaus_noise(new_img, sigma=0.5)
match(image1, new_img)
plt.subplot(248)
plt.title("Mask", fontsize=36)
new_img = np.array(image2)
step = 200
new_img[300 - step:300 + step, 200 - step:200 + step, :] = 0
match(image1, new_img)
plt.savefig(r"image/robust.png", bbox_inches='tight')

'''
plt.figure(figsize=(40, 15))
plt.subplot(241)
plt.title("Blur(sigma:1)", fontsize=36)
new_img = image2.filter(ImageFilter.GaussianBlur(radius=1))
new_img = np.array(new_img)
plt.xticks([])
plt.yticks([])
plt.imshow(new_img)
plt.subplot(245)
match(image1, new_img)
plt.subplot(242)
plt.title("Blur(sigma:5)", fontsize=36)
new_img = image2.filter(ImageFilter.GaussianBlur(radius=5))
new_img = np.array(new_img)
plt.xticks([])
plt.yticks([])
plt.imshow(new_img)
plt.subplot(246)
match(image1, new_img)
plt.subplot(243)
plt.title("Shear(0.3)", fontsize=36)
plt.xticks([])
plt.yticks([])
new_img = np.array(image2)
M = np.array([[1, 0.3, 0], [0.3, 1, 0]])
new_img = cv.warpAffine(new_img, M, (int(1.5 * new_img.shape[1]), int(1.5 * new_img.shape[0])))
plt.imshow(new_img)
plt.subplot(247)
match(image1, new_img)
plt.subplot(244)
plt.title("Shear(0.5)", fontsize=36)
plt.xticks([])
plt.yticks([])
new_img = np.array(image2)
M = np.array([[1, 0.5, 0], [0.5, 1, 0]])
new_img = cv.warpAffine(new_img, M, (int(1.5 * new_img.shape[1]), int(1.5 * new_img.shape[0])))
plt.imshow(new_img)
plt.subplot(248)
match(image1, new_img)
plt.savefig(r"image/attack.png", bbox_inches='tight')
'''

'''
plt.figure(figsize=(40, 8))
new_img = np.array(image2)
plt.subplot(141)
plt.title("Regular", fontsize=36)
match(image1, new_img, method=0)
plt.subplot(142)
plt.title("RANSAC", fontsize=36)
match(image1, new_img, method=cv.RANSAC)
plt.subplot(143)
plt.title("LMEDS", fontsize=36)
match(image1, new_img, method=cv.LMEDS)
plt.subplot(144)
plt.title("PROSAC", fontsize=36)
match(image1, new_img, method=cv.RHO)
plt.savefig(r"image/method.png", bbox_inches='tight')
'''
